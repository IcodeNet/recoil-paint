{"version":3,"sources":["components/shapes/Element.js","components/shapes/Rectangle.js","components/shapes/Ellipse.js","components/shapes/Image.js","utils/memoize.js","recoil/defaults.js","recoil/atoms.js","utils/statistics.js","recoil/selectors.js","utils/applyConstraints.js","utils/computeBoundingBox.js","components/shapes/Statistics.js","components/shapes/index.js","recoil/hooks.js","hooks/useMove.js","components/canvas/CanvasItem.js","components/canvas/ResizeHandler.js","hooks/useMoveItems.js","components/canvas/Selection.js","components/canvas/CanvasBackground.js","components/canvas/Canvas.js","components/common/Button.js","components/toolbar/NewItemButton.js","components/icons/Icon.js","components/icons/Square.js","components/toolbar/NewRectangleButton.js","components/icons/Image.js","components/toolbar/NewImageButton.js","components/icons/Statistics.js","components/toolbar/NewStatisticsButton.js","components/toolbar/Toolbar.js","components/sidebar/ItemInfo.js","components/sidebar/ItemInfoList.js","components/sidebar/AddRectsButton.js","components/sidebar/Sidebar.js","components/infobar/ColorPicker.js","components/common/NumberInput.js","components/infobar/SelectionInfo.js","components/infobar/InformationBar.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Element","x","y","width","height","fill","label","style","onMouseDown","onClick","children","View","styles","root","top","left","backgroundColor","Text","selectable","StyleSheet","create","position","justifyContent","alignItems","borderRadius","memoize","fn","cached","Map","id","params","has","get","result","set","shapes","defaultShape","type","gId","createNewShape","props","Object","assign","getDefaultShape","canvasLayoutState","atom","key","default","backgroundColorState","itemIdsState","selectedIdsState","movingItemIdsState","privateItemStateWithId","statisticsWithId","series","count","Math","floor","random","i","push","generateRandomSeries","length","async","loadStatistics","timeout","t","Promise","resolve","setTimeout","statisticsQuery","selector","itemWithId","item","originWidth","originHeight","newHeight","applyConstraints","newValue","selectedItemsSelector","state","ids","map","forEach","selectionBoundingBox","items","right","bottom","isMutilple","computeBoundingBox","container","flexDirection","paddingVertical","paddingHorizontal","bar","marginHorizontal","rect","ellipse","image","uri","ratio","resizeMode","source","statistics","status","others","setItemState","useSetRecoilState","statisticsLoadable","useRecoilValueLoadable","content","useEffect","contents","ActivityIndicator","size","serie","useUpdateItem","useRecoilCallback","useMove","func","isMoving","setIsMoving","useState","origin","setOrigin","clientX","clientY","offset","setOffset","callback","useCallback","handleMouseDown","metaKey","shiftKey","handleMouseMove","handleMouseUp","removeEventListeners","window","removeEventListener","addEventListener","CanvasItem","itemSnapshot","setItemSnapshot","itemState","useRecoilValue","setSelectedIds","updatePosition","Shape","shape","createShape","ResizeHandler","selectedItems","setSelectedItems","useRecoilState","selectedItemsSnapshot","setSelectedItemsSnapshot","resizeItem","resizeHandler","resizeHandlerDot","marginLeft","marginTop","cursor","borderWidth","borderColor","useMoveItems","movingItemsSnapshot","setMovingItemsSnapshot","movingItemIds","loadMovingItems","getPromise","itemIds","all","updateItemsPosition","updateSnpashot","newMovingItems","Selection","selectedIds","selection","setMovingItemIds","borderStyle","CanvasBackground","handleClick","absoluteFill","Canvas","ref","useRef","setLayoutState","onLayout","nativeEvent","layout","flex","overflow","zIndex","svg","Button","Icon","disabled","title","accessibilityLabel","current","setNativeProps","accessibilityRole","iconOnly","text","disabledIcon","opacity","NewItemButton","newShapeProps","newItem","setNewItem","setItemIds","canvasLayout","createNewItem","shapeParam","then","ariaLabel","viewBox","createElement","role","defaultProps","display","maxWidth","userSelect","textAlignVertical","iconRtl","transform","scaleX","Square","d","NewRectangleButton","SquareIcon","Image","NewImageButton","ImageIcon","process","Statistics","NewStatisticsButton","StatisticsIcon","Toolbar","button","marginBottom","marginRight","ItemInfo","subLabel","fontWeight","ItemInfoList","AddRectsButton","start","row","col","color","Sidebar","borderRightWidth","borderRightColor","borderRightType","padding","ColorPicker","shown","setShown","setBackgroundColor","handleChangeComplete","hex","hidePopup","e","target","closest","document","body","inner","popup","nativeID","onChangeComplete","NumberInput","value","onChangeNumber","TextInput","input","onChangeText","number","parseInt","isNaN","SelectionInfo","updateSelectedItem","name","selectedItem","column","bold","columnSpace","indexOf","labelRow","InformationBar","colorRow","borderLeftWidth","borderLeftColor","borderLeftType","Main","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2f041090.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native-web';\n\nexport default function Element({\n  x, y, width, height, fill, label, style,\n  onMouseDown, onClick, children\n}) {\n  return (\n    <View\n      style={\n        [\n          styles.root,\n          {\n            top: y,\n            left: x,\n            width,\n            height,\n            backgroundColor: fill,\n          },\n          style\n        ]\n      }\n      onMouseDown={onMouseDown}\n      onClick={onClick}\n    >\n      {children}\n      {label ? (\n        <Text selectable={false}>{label}</Text>\n      ) : null}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n})\n","import React from 'react';\nimport { StyleSheet } from 'react-native-web';\nimport Element from './Element';\n\nexport default function Rectangle(props) {\n  return (\n    <Element\n      {...props}\n      style={styles.root}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n\n  }\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native-web';\nimport Element from './Element';\n\nexport default function Ellipse(props) {\n  return (\n    <Element\n      {...props}\n      style={styles.root}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    borderRadius: '50%',\n  }\n})\n","import React from 'react';\nimport { Image as RNImage, StyleSheet } from 'react-native-web';\nimport Element from './Element';\n\nexport default function Image(props) {\n  const { originWidth, originHeight, width, height, uri } = props;\n\n  const ratio = originWidth / originHeight;\n\n  return (\n    <Element\n      {...props}\n      style={styles.root}\n    >\n      <RNImage\n        resizeMode=\"contain\"\n        ratio={ratio}\n        source={{ uri, width, height }}\n      />\n    </Element>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n\n  }\n})\n","export default function memoize(fn) {\n  let cached = new Map();\n  return (id, ...params) => {\n    if (cached.has(id)) {\n      return cached.get(id);\n    }\n\n    const result = fn(id, ...params);\n    cached.set(id, result);\n\n    return result;\n  }\n}\n","export const shapes = {};\nexport const defaultShape = {\n  type: 'rect',\n  x: 0,\n  y: 0,\n  label: 'Recoil',\n  fill: '#e0e1e8',\n  width: 200,\n  height: 100,\n};\n\nlet gId = 1;\nfunction generateId() {\n  return gId++;\n}\n\nexport function createNewShape(props) {\n  let id = generateId();\n  shapes[id] = Object.assign({ id }, defaultShape, props);\n\n  return id;\n}\n\nexport function getDefaultShape(id) {\n  return shapes[id] || defaultShape;\n}\n","import { atom } from 'recoil';\nimport memoize from '../utils/memoize';\nimport { getDefaultShape } from './defaults';\n\nexport const canvasLayoutState = atom({\n  key: 'canvasLayoutState',\n  default: {\n    x: 0,\n    y: 0,\n    width: 800,\n    height: 600,\n  }\n});\n\nexport const backgroundColorState = atom({\n  key: 'backgroundColorState',\n  default: 'white'\n});\n\nexport const itemIdsState = atom({\n  key: 'itemIdsState',\n  default: [],\n});\n\nexport const selectedIdsState = atom({\n  key: 'selectedIdsState',\n  default: [],\n});\n\nexport const movingItemIdsState = atom({\n  key: 'movingItemIdsState',\n  default: [],\n});\n\nexport const privateItemStateWithId =\n  memoize(id => atom({\n    key: `private-item${id}`,\n    default: getDefaultShape(id),\n  }));\n","import memoize from './memoize';\n\nexport function generateRandomSeries() {\n  // random count from 10 to 20;\n  const count = Math.floor((Math.random() * 10) + 10);\n  const series = [];\n\n  for (let i=0; i<count; i++) {\n    // random serie value from 0.1 to 1.0\n    series.push((Math.random() * 0.9) + 0.1);\n  }\n\n  return series;\n}\n\nconst delay = t => new Promise(resolve => setTimeout(resolve, t * 1000));\n\nconst statisticsWithId = memoize(id => {\n  const series = generateRandomSeries();\n  return {\n    id,\n    series,\n    width: 28 * series.length + 8,\n    height: 144,\n    label: `Series ${id}`,\n  }\n});\n\nexport async function loadStatistics(id) {\n  // random timeout from 1 to 5 seconds\n  const timeout = (Math.random() * 4) + 1;\n\n  await delay(timeout);\n\n  return statisticsWithId(id);\n}\n","import { selector } from 'recoil';\nimport computeBoundingBox from '../utils/computeBoundingBox';\nimport { privateItemStateWithId, selectedIdsState } from './atoms';\nimport applyConstraints from '../utils/applyConstraints';\nimport { loadStatistics } from '../utils/statistics';\nimport memoize from '../utils/memoize';\n\nexport const statisticsQuery = memoize(id => selector({\n  key: `Statistics${id}`,\n  get: async ({ get }) => {\n    let statistics = await loadStatistics(id);\n    return statistics;\n  },\n}));\n\nexport const itemWithId = memoize(id => selector({\n  key: `item${id}`,\n  get: ({ get }) => {\n    const state = get(privateItemStateWithId(id));\n    return applyConstraints(state);\n  },\n  set: ({ set }, newValue) => {\n    const state = privateItemStateWithId(id);\n    set(state, newValue);\n  }\n}));\n\nfunction itemsSelector(key, state) {\n  return selector({\n    key,\n    get: ({ get }) => {\n      const ids = get(state);\n      if (!ids.length) {\n        return [];\n      }\n\n      return ids.map(id => get(itemWithId(id)));\n    },\n    set: ({ set }, newValue) => {\n      newValue.forEach(item => {\n        let id = item.id;\n        set(itemWithId(id), item);\n      });\n    }\n  });\n}\n\nexport const selectedItemsSelector = itemsSelector('selectedItemsSelector', selectedIdsState);\n\nexport const selectionBoundingBox = selector({\n  key: 'selectionBoundingBox',\n  get: ({ get }) => computeBoundingBox(get(selectedItemsSelector))\n});\n","export default function applyConstraints(item) {\n  const { type, originWidth, originHeight, width } = item;\n\n  if (type !== 'image') {\n    return item;\n  }\n\n  const ratio = originWidth / originHeight;\n  let newHeight = width / ratio;\n  return {\n    ...item,\n    height: newHeight,\n  }\n}\n","\nexport default function computeBoundingBox(items) {\n  if (!items.length) {\n    return null;\n  }\n\n  let left = null;\n  let right = null;\n  let top = null;\n  let bottom = null;\n\n  items.forEach(item => {\n    if (left === null || item.x < left) {\n      left = item.x;\n    }\n\n    if (top === null || item.y < top) {\n      top = item.y;\n    }\n\n    if (right === null || item.x + item.width > right) {\n      right = item.x + item.width;\n    }\n\n    if (bottom === null || item.y + item.height > bottom) {\n      bottom = item.y + item.height;\n    }\n  });\n\n  return {\n    x: left,\n    y: top,\n    width: right - left,\n    height: bottom - top,\n    isMutilple: items.length > 1,\n  };\n}\n","import React, { useEffect } from 'react';\nimport { StyleSheet, View, ActivityIndicator } from 'react-native-web';\nimport { useSetRecoilState, useRecoilValueLoadable } from 'recoil';\nimport Element from './Element';\nimport { itemWithId, statisticsQuery } from '../../recoil/selectors';\n\nexport default function Statistics({ id, series, status, ...others }) {\n  const setItemState = useSetRecoilState(itemWithId(id));\n  const statisticsLoadable = useRecoilValueLoadable(statisticsQuery(id));\n\n  useEffect(() => {\n    if (statisticsLoadable.state === 'hasValue') {\n      setItemState(item => ({\n        ...item,\n        ...statisticsLoadable.contents,\n        status: 'loaded'\n      }));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statisticsLoadable.state]);\n\n  let content;\n\n  if (status === 'loading') {\n    content = <ActivityIndicator size=\"large\" />\n  } else {\n    content = (\n      <View style={styles.container}>\n        {series.map((serie, i) => (\n          <View\n            key={`serie-${i}`}\n            style={[\n              styles.bar,\n              {\n                height: serie * 100,\n              }\n            ]}\n          />\n        ))}\n      </View>\n    )\n  }\n\n  return (\n    <Element\n      {...others}\n      style={styles.root}\n    >\n      {content}\n    </Element>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {},\n  container: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n    alignItems: 'flex-end',\n  },\n  bar: {\n    marginHorizontal: 4,\n    backgroundColor: '#1189c7',\n    width: 20,\n  }\n});\n","import Rectangle from './Rectangle';\nimport Ellipse from './Ellipse';\nimport Image from './Image';\nimport Statistics from './Statistics';\n\nconst shapes = {\n  rect: Rectangle,\n  ellipse: Ellipse,\n  image: Image,\n  statistics: Statistics,\n}\n\nfunction createShape(shape) {\n  const { type } = shape;\n  return shapes[type];\n}\n\nexport {\n  Rectangle,\n  Ellipse,\n  Statistics,\n  createShape,\n}\n","import { useRecoilCallback } from 'recoil';\nimport { itemWithId } from './selectors';\nimport { createNewShape } from './defaults';\n\nexport function useUpdateItem() {\n  return useRecoilCallback(({ set }, newValue) => {\n    set(itemWithId(newValue.id), newValue)\n  });\n}\n\nexport function useNewItem() {\n  return useRecoilCallback(async ({ getPromise }, shapeParam) => {\n    let id = createNewShape(shapeParam);\n    const item = await getPromise(itemWithId(id));\n\n    return item;\n  });\n}\n\nexport function useLoadItems() {\n  return useRecoilCallback(async ({ getPromise }, itemIds) => {\n    return await Promise.all(\n      itemIds.map(id => getPromise(itemWithId(id)))\n    );\n  }, []);\n}\n\nexport function useUpdateItems() {\n  return useRecoilCallback(({ set }, newValue) => {\n    newValue.forEach(item => {\n      set(itemWithId(item.id), item);\n    })\n  }, []);\n}\n","import { useState, useCallback, useEffect } from 'react';\n\nexport default function useMove(func) {\n  const [isMoving, setIsMoving] = useState(false);\n  const [origin, setOrigin] = useState({ clientX: 0, clientY: 0 });\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n\n  const callback = useCallback((status, isMoving, origin, offset) => {\n    func({ status, isMoving, origin, offset  });\n  }, [func]);\n\n  const handleMouseDown = useCallback(({ clientX, clientY, metaKey, shiftKey }) => {\n    let origin = { clientX, clientY, metaKey, shiftKey };\n    setIsMoving(true);\n    setOrigin(origin);\n    callback('start', true, origin, offset);\n  }, [callback, offset]);\n\n\n  const handleMouseMove = useCallback(({ clientX, clientY }) => {\n    if (!isMoving) {\n      return;\n    }\n\n    const offset = {\n      x: clientX - origin.clientX,\n      y: clientY - origin.clientY\n    };\n\n    setOffset(offset);\n    callback('moving', true, origin, offset);\n  }, [callback, isMoving, origin]);\n\n  const handleMouseUp = useCallback(() => {\n    if (!isMoving) {\n      return;\n    }\n    setIsMoving(false);\n    setOffset({ x: 0, y: 0 });\n    callback('end', false, origin, offset);\n  }, [callback, isMoving, offset, origin]);\n\n  useEffect(() => {\n\n    function addEventListeners() {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n\n    function removeEventListeners() {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (isMoving) {\n      addEventListeners();\n    } else {\n      removeEventListeners();\n    }\n\n    return removeEventListeners;\n  }, [handleMouseMove, handleMouseUp, isMoving]);\n\n  return {\n    onMouseDown: handleMouseDown,\n  }\n}\n","import React, { useState } from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { createShape } from '../shapes';\nimport { selectedIdsState } from '../../recoil/atoms';\nimport { itemWithId } from '../../recoil/selectors';\nimport { useUpdateItem } from '../../recoil/hooks';\nimport useMove from '../../hooks/useMove';\n\nexport default function CanvasItem({ id }) {\n  const [itemSnapshot, setItemSnapshot] = useState(null);\n  const itemState = useRecoilValue(itemWithId(id));\n  const setSelectedIds = useSetRecoilState(selectedIdsState);\n  const updatePosition = useUpdateItem();\n\n  const { onMouseDown } = useMove(({ status, origin, offset }) => {\n    if (status === 'start') {\n      setItemSnapshot(itemState);\n    }\n\n    if (status === 'moving' && itemSnapshot) {\n      updatePosition({\n        ...itemSnapshot,\n        x: itemSnapshot.x + offset.x,\n        y: itemSnapshot.y + offset.y,\n      })\n    }\n\n    if (status === 'end') {\n      setItemSnapshot(null);\n      setSelectedIds(ids => {\n        if (origin.metaKey || origin.shiftKey) {\n          return [...ids, id];\n        }\n        return [id];\n      });\n    }\n  });\n\n  const Shape = createShape(itemState);\n  if (!Shape) {\n    return null;\n  }\n\n  return <Shape {...itemState} onMouseDown={onMouseDown} />;\n}\n","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilState } from 'recoil';\nimport { selectedItemsSelector } from '../../recoil/selectors';\nimport useMove from '../../hooks/useMove';\n\n\nfunction resizeItem(item, offset) {\n  let { x, y, width, height } = item;\n  width += offset.x;\n  height += offset.y;\n\n  if (width < 0) {\n    width = -width;\n    x -= width;\n  }\n\n  if (height < 0) {\n    height = -height;\n    y -= height;\n  }\n\n  return {\n    ...item,\n    x,\n    y,\n    width,\n    height,\n  };\n}\n\nexport default function ResizeHandler() {\n  const [selectedItems, setSelectedItems] = useRecoilState(selectedItemsSelector);\n  const [selectedItemsSnapshot, setSelectedItemsSnapshot] = useState(null);\n\n  const { onMouseDown } = useMove(({ status, offset }) => {\n    if (status === 'start') {\n      setSelectedItemsSnapshot(selectedItems)\n    }\n\n    if (status === 'moving') {\n      setSelectedItems(selectedItemsSnapshot.map(item => resizeItem(item, offset)));\n    }\n  })\n\n  if (selectedItems.length !== 1 || selectedItems[0].type === 'statistics') {\n    return null;\n  }\n\n  const { x, y, width, height } = selectedItems[0];\n\n  return (\n    <View\n      style={[styles.resizeHandler, {\n        left: x + width,\n        top: y + height,\n      }]}\n      onMouseDown={onMouseDown}\n    >\n      <View style={styles.resizeHandlerDot} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  resizeHandler: {\n    width: 24,\n    height: 24,\n    marginLeft: -13,\n    marginTop: -13,\n    justifyContent: 'center',\n    alignItems: 'center',\n    cursor: 'nwse-resize',\n  },\n  resizeHandlerDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 4,\n    backgroundColor: 'white',\n    borderWidth: 2,\n    borderColor: 'blue',\n    position: 'absolute',\n  }\n})\n","import { useEffect, useState, useCallback } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { movingItemIdsState } from '../recoil/atoms';\nimport { useLoadItems, useUpdateItems } from '../recoil/hooks';\nimport useMove from './useMove';\n\nexport default function useMoveItems(func) {\n  const [movingItemsSnapshot, setMovingItemsSnapshot] = useState([]);\n  const movingItemIds = useRecoilValue(movingItemIdsState);\n\n  const loadMovingItems = useLoadItems();\n  const updateItemsPosition = useUpdateItems();\n\n  const updateSnpashot = useCallback(async () => {\n    const items = await loadMovingItems(movingItemIds);\n    setMovingItemsSnapshot(items);\n  }, [loadMovingItems, movingItemIds]);\n\n  const { onMouseDown } = useMove((params) => {\n    const { status, offset } = params;\n    func(params);\n\n    if (status === 'moving' && movingItemsSnapshot.length) {\n      const newMovingItems = movingItemsSnapshot.map(item => {\n        return {\n          ...item,\n          x: item.x + offset.x,\n          y: item.y + offset.y,\n        }\n      });\n      updateItemsPosition(newMovingItems);\n    }\n  });\n\n  useEffect(() => {\n    updateSnpashot();\n  }, [movingItemIds, updateSnpashot]);\n\n  return {\n    onMouseDown\n  }\n}\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport ResizeHandler from './ResizeHandler';\nimport { movingItemIdsState, selectedIdsState } from '../../recoil/atoms';\nimport { selectionBoundingBox } from '../../recoil/selectors';\nimport useMoveItems from '../../hooks/useMoveItems';\n\nexport default function Selection() {\n  const selectedIds = useRecoilValue(selectedIdsState);\n  const selection = useRecoilValue(selectionBoundingBox);\n  const setMovingItemIds = useSetRecoilState(movingItemIdsState);\n\n  const { onMouseDown } = useMoveItems(({ status }) => {\n    if (!selection) {\n      return null;\n    }\n\n    if (status === 'start') {\n      setMovingItemIds(selectedIds)\n    }\n\n    if (status === 'end') {\n      setMovingItemIds([])\n    }\n  })\n\n  if (!selection) {\n    return null;\n  }\n\n  const { x, y, width, height } = selection;\n\n  return (\n    <>\n      <View\n        style={[styles.selection, {\n          left: x,\n          top: y,\n          width,\n          height\n        }]}\n        onMouseDown={onMouseDown}\n      />\n      <ResizeHandler />\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  selection: {\n    borderWidth: 2,\n    borderStyle: 'dashed',\n    borderColor: 'blue',\n    position: 'absolute',\n    cursor: 'move',\n  },\n})\n","import React, { useCallback } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\nimport { selectedIdsState, backgroundColorState } from '../../recoil/atoms';\n\nexport default function CanvasBackground(props) {\n  const setSelectedIds = useSetRecoilState(selectedIdsState);\n  const backgroundColor = useRecoilValue(backgroundColorState);\n\n  const handleClick = useCallback(() => {\n    setSelectedIds([]);\n  }, [setSelectedIds]);\n\n  return (\n    <View style={[StyleSheet.absoluteFill, { backgroundColor }]} onClick={handleClick} />\n  );\n}\n","import React, { useRef } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport CanvasItem from './CanvasItem';\nimport Selection from './Selection';\nimport CanvasBackground from './CanvasBackground';\nimport { itemIdsState, canvasLayoutState } from '../../recoil/atoms';\n\nexport default function Canvas() {\n  const ref = useRef();\n  const itemIds = useRecoilValue(itemIdsState);\n  const setLayoutState = useSetRecoilState(canvasLayoutState);\n\n  const onLayout = ({\n    nativeEvent: {\n      layout: { x, y, width, height }\n    }\n  }) => setLayoutState({ x, y, width, height });\n\n  return (\n    <View style={styles.root} ref={ref} onLayout={onLayout}>\n      <View style={styles.container}>\n        <CanvasBackground />\n        {itemIds.map(id => <CanvasItem key={`item-${id}`} id={id} />)}\n        <Selection />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    backgroundColor: 'white',\n    overflow: 'visible',\n    zIndex: 0,\n  },\n  container: {\n    flex: 1,\n  },\n  svg: {\n    flex: 1,\n  }\n})\n","import React, { useEffect, useRef } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\n\nexport default function Button({\n  Icon, disabled, style, children,\n  title, accessibilityLabel,\n  ...others\n}) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current.setNativeProps({ title });\n  }, [title]);\n\n  return (\n    <View\n      {...others}\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel || title}\n      disabled={disabled}\n      ref={ref}\n      style={[\n        styles.root,\n        disabled && styles.disabled,\n        Icon && styles.iconOnly,\n        !Icon && styles.text,\n        style\n      ]}\n    >\n      {Icon && <Icon style={[disabled && styles.disabledIcon]} />}\n      {!Icon && children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    borderWidth: 1,\n    borderColor: '#d6d8d9',\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n  },\n  iconOnly: {\n    width: 32,\n    height: 32,\n  },\n  text: {\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n  },\n  disabled: {\n    cursor: 'default',\n    opacity: 0.8,\n  },\n  disabledIcon: {\n    fill: '#ccc'\n  }\n})\n","import React, { useState } from 'react';\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\nimport Button from '../common/Button';\nimport useMove from '../../hooks/useMove';\nimport { itemIdsState, canvasLayoutState, selectedIdsState } from '../../recoil/atoms';\nimport { useUpdateItem, useNewItem } from '../../recoil/hooks';\n\nexport default function NewItemButton({ newShapeProps = {}, ...others }) {\n  const [newItem, setNewItem] = useState(null);\n  const setItemIds = useSetRecoilState(itemIdsState);\n  const setSelectedIds = useSetRecoilState(selectedIdsState);\n  const canvasLayout = useRecoilValue(canvasLayoutState);\n  const createNewItem = useNewItem();\n  const updatePosition = useUpdateItem();\n\n  const { onMouseDown } = useMove(({ status, origin, offset }) => {\n    if (status === 'start') {\n      setNewItem(null);\n      createNewItem({\n        ...newShapeProps,\n        x: origin.clientX - canvasLayout.x,\n        y: origin.clientY - canvasLayout.y\n      })\n        .then(item => {\n          setNewItem(item);\n          setItemIds(items => [...items, item.id]);\n          setSelectedIds([]);\n        });\n    }\n\n    if (status === 'moving') {\n      if (newItem) {\n        updatePosition({\n          ...newItem,\n          x: origin.clientX + offset.x - canvasLayout.x,\n          y: origin.clientY + offset.y - canvasLayout.y\n        })\n      }\n    }\n\n    if (status === 'end') {\n      if (newItem) {\n        setNewItem(null);\n        setSelectedIds([newItem.id]);\n      }\n    }\n  })\n\n\n\n  return <Button {...others} onMouseDown={onMouseDown} />;\n}\n","import { StyleSheet, unstable_createElement as createElement } from 'react-native-web';\n\nexport default function Icon(props) {\n  const {\n    ariaLabel, children, width, height, viewBox,\n  } = props;\n  const style = [styles.root, props.style];\n\n  return createElement(\n    'svg',\n    {\n      role: 'presentation',\n      width,\n      height,\n      'aria-label': ariaLabel,\n      style,\n      viewBox: viewBox || '0 0 24 24',\n    },\n    children,\n  );\n}\n\nIcon.defaultProps = {\n  width: 24,\n  height: 24,\n};\n\n\nconst styles = StyleSheet.create({\n  root: {\n    display: 'inline-block',\n    fill: 'currentcolor',\n    height: '1.25em',\n    maxWidth: '100%',\n    position: 'relative',\n    userSelect: 'none',\n    textAlignVertical: 'text-bottom',\n  },\n  iconRtl: {\n    transform: [{\n      scaleX: -1,\n    }],\n  },\n});\n","\nimport React from 'react';\nimport Icon from './Icon';\n\nexport default function Square(props) {\n  return (\n    <Icon\n      {...props}\n    >\n      <g transform=\"matrix(.48 0 0 .48 0 0)\">\n        <path fill=\"#000\" d=\"M44 1h-38c-2.757 0-5 2.243-5 5v38c0 2.757 2.243 5 5 5h38c2.757 0 5-2.243 5-5v-38c0-2.757-2.243-5-5-5Zm3 43c0 1.654-1.346 3-3 3h-38c-1.654 0-3-1.346-3-3v-38c0-1.654 1.346-3 3-3h38c1.654 0 3 1.346 3 3v38Z\"></path>\n      </g>\n    </Icon>\n  );\n}\n","import React from 'react';\nimport NewItemButton from './NewItemButton';\nimport SquareIcon from '../icons/Square';\n\nexport default function NewRectangleButton({ style, ...others }) {\n  return (\n    <NewItemButton\n      {...others}\n      Icon={SquareIcon}\n      style={style}\n      title=\"Drag to create a new Rectangle\"\n    />\n  );\n}\n","\nimport React from 'react';\nimport Icon from './Icon';\n\nexport default function Image(props) {\n  return (\n    <Icon\n      {...props}\n    >\n      <g>\n        <path d=\"M19.235,1.75H4.765c-1.662,0-3.015,1.352-3.015,3.015v14.471c0,1.662,1.352,3.015,3.015,3.015h14.471  c1.662,0,3.015-1.352,3.015-3.015V4.765C22.25,3.102,20.898,1.75,19.235,1.75z M21.044,19.235c0,0.997-0.811,1.809-1.809,1.809  H4.765c-0.997,0-1.809-0.811-1.809-1.809v-2.181l4.866-5.407l6.573,5.975l3.635-3.029l3.015,2.512V19.235z M21.044,15.536  l-3.015-2.512l-3.601,3L7.737,9.94l-4.781,5.312V4.765c0-0.997,0.811-1.809,1.809-1.809h14.471c0.997,0,1.809,0.811,1.809,1.809  V15.536z\"/>\n        <path d=\"M16.221,10.794c1.662,0,3.015-1.352,3.015-3.015s-1.352-3.015-3.015-3.015c-1.662,0-3.015,1.352-3.015,3.015  S14.558,10.794,16.221,10.794z M16.221,5.971c0.997,0,1.809,0.811,1.809,1.809s-0.811,1.809-1.809,1.809s-1.809-0.811-1.809-1.809  S15.223,5.971,16.221,5.971z\"/>\n      </g>\n    </Icon>\n  );\n}\n","import React from 'react';\nimport NewItemButton from './NewItemButton';\nimport ImageIcon from '../icons/Image';\n\nexport default function NewImageButton({ style, ...others }) {\n  const newShapeProps = {\n    type: 'image',\n    uri: process.env.PUBLIC_URL + '/olympic-marmot.jpg',\n    originWidth: 1062,\n    originHeight: 1388,\n    width: 306,\n    height: 400,\n    label: '',\n  };\n\n  return (\n    <NewItemButton\n      {...others}\n      Icon={ImageIcon}\n      style={style}\n      title=\"Drag to create a new Image\"\n      newShapeProps={newShapeProps}\n    />\n  );\n}\n","\nimport React from 'react';\nimport Icon from './Icon';\n\nexport default function Statistics(props) {\n  return (\n    <Icon\n      {...props}\n    >\n      <g transform=\"matrix(.380952 0 0 .380952 0 0)\">\n        <path d=\"M10 9h-8c-1.104 0-2 .896-2 2v40c0 1.104.896 2 2 2h8c1.104 0 2-.896 2-2v-40c0-1.104-.896-2-2-2Z\"></path>\n        <path d=\"M27.833 23h-8c-1.104 0-2.833.11-2.833.864v27.273c0 .753 1.729 1.863 2.833 1.863h8c1.105 0 1.167-1.11 1.167-1.863v-27.273c0-.754-.062-.864-1.167-.864Z\"></path>\n        <path d=\"M44.5 12h-8c-1.104 0-2.5.334-2.5 1.364v37.273c0 1.029 1.396 2.363 2.5 2.363h8c1.104 0 1.5-1.334 1.5-2.363v-37.273c0-1.03-.396-1.364-1.5-1.364Z\"></path>\n        <path d=\"M61.5 37h-8c-1.104 0-2.5-.175-2.5.228v14.545c0 .402 1.396 1.227 2.5 1.227h8c1.104 0 1.5-.825 1.5-1.228v-14.544c0-.403-.396-.228-1.5-.228Z\"></path>\n      </g>\n    </Icon>\n  );\n}\n","import React from 'react';\nimport NewItemButton from './NewItemButton';\nimport StatisticsIcon from '../icons/Statistics';\n\nexport default function NewStatisticsButton({ style, ...others }) {\n  const newShapeProps = {\n    type: 'statistics',\n    width: 100,\n    height: 100,\n    status: 'loading',\n    label: '',\n  };\n\n  return (\n    <NewItemButton\n      {...others}\n      Icon={StatisticsIcon}\n      style={style}\n      title=\"Drag to create a new Statistics\"\n      newShapeProps={newShapeProps}\n    />\n  );\n}\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport NewRectangleButton from './NewRectangleButton';\nimport NewImageButton from './NewImageButton';\nimport NewStatisticsButton from './NewStatisticsButton';\n\nexport default function Toolbar() {\n  return (\n    <View style={styles.root}>\n      <NewRectangleButton style={styles.button} />\n      <NewImageButton style={styles.button} />\n      <NewStatisticsButton style={styles.button} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  button: {\n    marginRight: 8,\n  }\n})\n","import React from 'react';\nimport { View, StyleSheet, Text } from 'react-native-web';\nimport { useRecoilValue } from 'recoil';\nimport { itemWithId } from '../../recoil/selectors';\n\nexport default function ItemInfo({ id }) {\n  const itemState = useRecoilValue(itemWithId(id));\n  const { label, x, y } = itemState;\n\n  return (\n    <View style={styles.root}>\n      {label ? <Text style={styles.label}>{label}</Text> : null}\n      <Text style={styles.subLabel}>{`(x = ${x} y = ${y})`}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    marginBottom: 16\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  subLabel: {\n\n  }\n})\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { useRecoilValue } from 'recoil';\nimport ItemInfo from './ItemInfo';\nimport { itemIdsState } from '../../recoil/atoms';\n\nexport default function ItemInfoList() {\n  const itemIds = useRecoilValue(itemIdsState);\n\n  return (\n    <View style={styles.root}>\n      {itemIds.map(id => <ItemInfo key={`item-info-${id}`} id={id} />)}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    overflow: 'auto'\n  },\n})\n","import React from 'react';\nimport { StyleSheet, Text } from 'react-native-web';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport Button from '../common/Button';\nimport { itemIdsState, selectedIdsState } from '../../recoil/atoms';\nimport { createNewShape } from '../../recoil/defaults';\n\nexport default function AddRectsButton() {\n  const [itemIds, setItemIds] = useRecoilState(itemIdsState);\n  const setSelectedIds = useSetRecoilState(selectedIdsState);\n\n  const handleClick = () => {\n    let space = 16;\n    let width = 100;\n    let height = 100;\n    let ids = [];\n    let start = itemIds.length;\n    for (let i=0; i<100; i++) {\n      let count = start + i;\n      let row = Math.floor(count / 5);\n      let col = count % 5;\n      let x = space * (col + 1) + width * col;\n      let y = space * (row + 1) + height * row;\n      let id = createNewShape({ x, y, width, height });\n      ids.push(id);\n    }\n\n    setItemIds([...itemIds, ...ids]);\n    setSelectedIds([]);\n  }\n\n\n  return (\n    <Button style={styles.root} onClick={handleClick}>\n      <Text style={styles.text}>Add 100 Rects</Text>\n    </Button>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: '#12850b'\n  },\n  text: {\n    color: 'white',\n  }\n})\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport Toolbar from '../toolbar/Toolbar';\nimport ItemInfoList from './ItemInfoList';\nimport AddRectsButton from './AddRectsButton';\n\nexport default function Sidebar() {\n  return (\n    <View style={styles.root}>\n      <Toolbar />\n      <ItemInfoList />\n      <View>\n        <AddRectsButton />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    width: 240,\n    height: '100vh',\n    borderRightWidth: 1,\n    borderRightColor: '#d6d8d9',\n    borderRightType: 'solid',\n    padding: 16\n  },\n})\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport { SketchPicker } from 'react-color';\nimport { useRecoilState } from 'recoil';\nimport { backgroundColorState } from '../../recoil/atoms';\n\nexport default function ColorPicker() {\n  const [shown, setShown] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useRecoilState(backgroundColorState);\n\n  const handleChangeComplete = useCallback((color) => {\n    setBackgroundColor(color.hex);\n  }, [setBackgroundColor]);\n\n  const handleClick = useCallback(() => {\n    setShown(true);\n  }, []);\n\n  useEffect(() => {\n    function hidePopup(e) {\n      if (e.target.closest('#color-picker')) {\n        return;\n      }\n      setShown(false);\n    }\n\n    document.body.addEventListener('click', hidePopup);\n\n    return () => {\n      document.body.removeEventListener('click', hidePopup);\n    }\n  }, []);\n\n  return (\n    <View style={styles.root} onClick={handleClick}>\n      <View style={[styles.inner, { backgroundColor: backgroundColor }]} />\n      {shown && (\n        <View style={styles.popup} nativeID=\"color-picker\">\n          <SketchPicker\n            color={backgroundColor}\n            onChangeComplete={handleChangeComplete}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    borderRadius: '50%',\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#d6d8d9',\n    width: 24,\n    height: 24,\n    marginLeft: 16,\n    padding: 2,\n  },\n  inner: {\n    borderRadius: '50%',\n    width: 18,\n    height: 18,\n  },\n  popup: {\n    position: 'absolute',\n    right: 32,\n  }\n})\n","import React from 'react';\nimport { TextInput, StyleSheet } from 'react-native-web';\n\nexport default function NumberInput(props) {\n  const { value, style, onChangeNumber, ...others } = props;\n\n  const handleChnageText = (text) => {\n    let number = parseInt(text);\n    if (isNaN(number)) {\n      return;\n    }\n    onChangeNumber(number);\n  }\n\n  return (\n    <TextInput\n      {...others}\n      value={value}\n      style={[styles.input, style]}\n      onChangeText={handleChnageText}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    flex: 1,\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    backgroundColor: 'white',\n    borderRadius: 4,\n    borderColor: '#d6d8d9',\n    borderWidth: 1,\n    marginTop: 8,\n  }\n})\n","import React, { useCallback } from 'react';\nimport { View, StyleSheet, Text, TextInput } from 'react-native-web';\nimport { useRecoilState } from 'recoil';\nimport NumberInput from '../common/NumberInput';\nimport { selectedItemsSelector } from '../../recoil/selectors';\n\nexport default function SelectionInfo() {\n  const [selectedItems, setSelectedItems] = useRecoilState(selectedItemsSelector);\n\n  const updateSelectedItem = useCallback((name, value) => {\n    setSelectedItems([{...selectedItems[0], [name]: value}])\n  }, [selectedItems, setSelectedItems]);\n\n  if (selectedItems.length !== 1) {\n    return null;\n  }\n\n  const selectedItem = selectedItems[0];\n\n\n  return (\n    <View style={styles.root}>\n      <View style={styles.row}>\n        <Text>Selection:</Text>\n      </View>\n      <View style={styles.row}>\n        <View style={styles.column}>\n          <Text style={styles.bold}>X</Text>\n          <NumberInput\n            value={selectedItem.x}\n            style={styles.input}\n            onChangeNumber={number => updateSelectedItem('x', number)}\n          />\n        </View>\n        <View style={styles.columnSpace} />\n        <View style={styles.column}>\n          <Text style={styles.bold}>Y</Text>\n          <NumberInput\n            value={selectedItem.y}\n            style={styles.input}\n            onChangeNumber={number => updateSelectedItem('y', number)}\n          />\n        </View>\n      </View>\n      {['image'].indexOf(selectedItem.type) === -1 && (\n        <View style={styles.labelRow}>\n          <Text style={styles.bold}>Label:</Text>\n          <TextInput\n            value={selectedItem.label}\n            style={styles.input}\n            onChangeText={text => updateSelectedItem('label', text)}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n  },\n  row: {\n    marginBottom: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  labelRow: {},\n  column: {\n    flex: 1,\n  },\n  columnSpace: {\n    width: 8,\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  input: {\n    flex: 1,\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    backgroundColor: 'white',\n    borderRadius: 4,\n    borderColor: '#d6d8d9',\n    borderWidth: 1,\n    marginTop: 8,\n  }\n})\n","import React from 'react';\nimport { View, StyleSheet, Text } from 'react-native-web';\nimport ColorPicker from './ColorPicker';\nimport SelectionInfo from './SelectionInfo';\n\nexport default function InformationBar() {\n  return (\n    <View style={styles.root}>\n      <View style={styles.row}>\n        <Text>Document:</Text>\n      </View>\n      <View style={[styles.row, styles.colorRow]}>\n        <Text style={styles.title}>Background color:</Text>\n        <ColorPicker />\n      </View>\n      <SelectionInfo />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    width: 240,\n    borderLeftWidth: 1,\n    borderLeftColor: '#d6d8d9',\n    borderLeftType: 'solid',\n    padding: 16,\n  },\n  row: {\n    marginBottom: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  colorRow: {\n    zIndex: 1,\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n})\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native-web';\nimport Canvas from './canvas/Canvas';\nimport Sidebar from './sidebar/Sidebar';\nimport InformationBar from './infobar/InformationBar';\n\nexport default function Main() {\n  return (\n    <View style={styles.root}>\n      <Sidebar />\n      <Canvas />\n      <InformationBar />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    height: '100vh',\n    flexDirection: 'row',\n    backgroundColor: '#eef0f4',\n  },\n})\n","import React from 'react';\nimport Main from './components/Main';\nimport { RecoilRoot } from 'recoil';\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <Main />\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}